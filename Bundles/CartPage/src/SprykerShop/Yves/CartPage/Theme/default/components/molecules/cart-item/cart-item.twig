{# @deprecated Use molecule product-cart-item instead. #}
{% extends model('component') %}

{% define config = {
    name: 'cart-item',
    tag: 'article',
} %}

{% define data = {
    cart: required,
    isQuoteEditable: required,
    cartItem: required,
    attributes: required,
} %}

{% set canEditCart = not is_granted('ROLE_USER') or data.isQuoteEditable %}

{% block body %}
    <div class="grid grid--stretch grid--justify">
        <div class="col col--sm-12 col--lg-2">
            {% include molecule('cart-image', 'CartPage') with {
                data: {
                    name: data.cartItem.name | default(''),
                    image: data.cartItem.images is empty ? null : (data.cartItem.images | first),
                },
            } only %}
        </div>

        <div class="col col--sm-12 col--lg-5">
            <h6>{{ data.cartItem.name }}</h6>

            <small class="text-secondary" data-qa="cart-item-sku">
                {{ 'cart.item.sku' | trans }}
                {{ data.cartItem.sku }}
            </small>

            {% if data.attributes is not empty %}
                {% include molecule('cart-item-variant-selector', 'CartPage') with {
                    data: {
                        cartItem: data.cartItem,
                        cartItemAttributes: data.attributes,
                        canEditCart: canEditCart,
                    },
                } only %}
            {% endif %}

            {% widget 'ProductBundleCartItemsListWidget' args [data.cartItem, data.cart] only %}
            {% elsewidget 'ProductBundleItemsWidgetPlugin' args [data.cartItem, data.cart] only %} {# @deprecated Use ProductBundleCartItemsListWidget instead. #}
            {% endwidget %}

            {% include molecule('cart-item-summary', 'CartPage') with {
                data: {
                    unitPrice: data.cartItem.unitPrice | money(true, data.cart.currency.code),
                    subtotalPrice: data.cartItem.sumSubtotalAggregation | money(true, data.cart.currency.code),
                    cartItem: data.cartItem,
                    currencyIsoCode: data.cart.currency.code,
                },
            } only %}

        </div>

        <div class="col col--sm-12 col--lg-4">
            {% if widgetExists('CartProductPackagingUnitWidgetPlugin') %}
                {{ widget('CartProductPackagingUnitWidgetPlugin', data.cartItem) }} {# @deprecated Use molecule('packaging-unit-cart', 'ProductPackagingUnitWidget') instead. #}
            {% elseif data.cartItem.amountSalesUnit is not empty %}
                {% include molecule('packaging-unit-cart', 'ProductPackagingUnitWidget') ignore missing with {
                    data: {
                        amount: data.cartItem.amount,
                        quantity: data.cartItem.quantity,
                        quantitySalesUnit: data.cartItem.quantitySalesUnit,
                        quantityConversion: data.cartItem.quantitySalesUnit.conversion,
                        quantityProductMeasurementUnit: data.cartItem.quantitySalesUnit.productMeasurementUnit,
                        amountSalesUnit: data.cartItem.amountSalesUnit,
                        amountConversion: data.cartItem.amountSalesUnit.conversion,
                        amountProductMeasurementUnit: data.cartItem.amountSalesUnit.productMeasurementUnit,
                        amountValue: data.cartItem.amountSalesUnit.value
                    }
                } only %}
            {% endif %}

            {% if data.cartItem.amountSalesUnit is empty %}
                {% if canEditCart %}
                    {% widget 'CartProductMeasurementUnitQuantitySelectorWidget' args [data.cartItem] only %}
                    {% elsewidget 'QuantitySalesUnitWidgetPlugin' args [data.cartItem] only %} {# @deprecated Use CartProductMeasurementUnitQuantitySelectorWidget instead. #}
                    {% nowidget %}
                        {% include molecule('cart-quantity-input', 'CartPage') with {
                            data: {
                                cartItem: data.cartItem
                            }
                        } only %}
                    {% endwidget %}
                {% else %}
                    {{ 'cart.item_quantity' | trans }}:
                    <strong>{{ data.cartItem.quantity }}</strong>
                    {% include molecule('measurement-unit-item', 'ProductMeasurementUnitWidget') ignore missing with {
                        data: {
                            cartItem: data.cartItem,
                        },
                    } only %}
                {% endif %}
            {% endif %}

            {% if canEditCart %}
                {% widget 'RemoveFromCartFormWidget' args [data.product] only %}
                    {% block embeddedData %}
                        <button class="float-right link" data-init-single-click>
                            {{- 'product_cart_item.remove' | trans -}}
                        </button>
                    {% endblock %}
                {% endwidget %}
            {% endif %}

            {% block cartItemNote %}
                {% widget 'CartItemNoteFormWidget' args [data.cartItem, data.cart] only %}
                {% elsewidget 'CartNoteQuoteItemWidgetPlugin' args [data.cartItem, data.cart] only %} {# @deprecated Use CartItemNoteFormWidget instead. #}
                {% endwidget %}
            {% endblock %}
        </div>
    </div>
{% endblock %}
