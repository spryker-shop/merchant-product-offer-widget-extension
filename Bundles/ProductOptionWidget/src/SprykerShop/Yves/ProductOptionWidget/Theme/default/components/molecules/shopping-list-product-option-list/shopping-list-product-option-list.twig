{% extends model('component') %}

{% define config = {
    name: 'shopping-list-product-option-list',
} %}

{% define data = {
    options: required,
} %}

{# @deprecated property "data-product-available" is deprecated: use "data-product-unavailable" instead. #}
{% define attributes = {
    'data-product-available': false,
    'data-product-unavailable': attributes['data-product-available'] | default(false),
} %}

{% block body %}
    <ul class="grid spacing-x spacing-x--small spacing-bottom spacing-bottom--big">
    {% for child in data.options %}
        <li class="{{ config.name }}__item col col--sm-6 col--lg-4">
            <strong>{{ form_label(child) }}:</strong>

            {% embed atom('select') with {
                modifiers: ['expand'],
                attributes: {
                    name: child.vars.full_name,
                    disabled: attributes['data-product-unavailable'],
                },
                embed: {
                    options: child.vars.choices,
                },
            } only %}
                {% block options %}
                    <option value="">{{ 'product.product_options_select' | trans }}</option>
                    {% for option in embed.options %}
                        {% set optionAttributeSelected = option.data.getIsSelected ? 'selected' %}

                        <option value="{{ option.data.getIdProductOptionValue }}" {{ optionAttributeSelected }}>
                            {{ option.data.getValue | trans }} {{ option.data.getPrice | money }}
                        </option>
                    {% endfor %}
                {% endblock %}
            {% endembed %}

            {{ form_errors(child) }}
            {% do child.setRendered %}
        </li>
    {% endfor %}
    </ul>
{% endblock %}
