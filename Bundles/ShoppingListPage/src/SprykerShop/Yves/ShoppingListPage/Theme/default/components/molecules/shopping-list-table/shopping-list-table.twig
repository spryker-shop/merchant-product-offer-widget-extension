{% extends model('component') %}

{% define config = {
    name: 'shopping-list-table',
    tag: 'table'
} %}

{% define data = {
    shoppingList: required,
    shoppingListItems: required
} %}

{% block body %}
    <thead class="{{ config.name }}__head">
        <tr>
            <th class="{{ config.name }}__cell text-left" colspan="3">{{ 'customer.account.shopping_list.product' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.price' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.quantity' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.availability' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.overview.actions' | trans }}</th>
        </tr>
    </thead>
    <tbody>
        {% for item in data.shoppingListItems %}
            {% set isItemAvailable = item.available is defined and item.available and item.price is defined and item.price is not null %}
            {% set productDiscontinuedWidget = findWidget('ProductDiscontinuedWidget', [item.sku]) %}
            {% set isDiscontinued = productDiscontinuedWidget.isDiscontinued ?? widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', item.sku) %} {# @deprecated Use ProductDiscontinuedWidget instead of ProductDiscontinuedWidgetPlugin. #}
            {% if isDiscontinued is not null %}
                {% set isItemAvailable = not isDiscontinued and isItemAvailable %}
            {% endif %}
            <tr class="{{ config.name }}__row {{ not isItemAvailable ? config.name ~ '__row--disable' : ''}}">
                <td class="{{ config.name }}__cell">
                    <input type="checkbox" {{ isItemAvailable ? '' : 'disabled' }} name="shoppingListItem[idShoppingListItem][{{ item.idShoppingListItem }}]" value="{{ item.idShoppingListItem }}">
                </td>
                <td class="{{ config.name }}__cell text-center">
                    {% if item.images is defined and item.images is not empty %}
                        {% include atom('thumbnail') with {
                            modifiers: ['small', 'min-size'],
                            attributes: {
                                alt: item.name | default(''),
                                src: item.images.0.externalUrlSmall | default,
                                title: item.name | default
                            }
                        } only %}
                    {% endif %}
                </td>
                <td class="{{ config.name }}__cell">
                    <ul class="list spacing-y">
                        <li class="list__item">
                            <a href="{{ item.url }}">{{ item.name }}</a>
                        </li>
                        <li class="list__item">
                            <small class="text-secondary">{{ item.sku }}</small>
                        </li>

                        <li class="list__item">
                            {% set listOfAttributes = {} %}
                            {% for attribute in item.superAttributesDefinition if item.attributes[attribute] is defined %}
                                {% set listOfAttributes = listOfAttributes|merge({ ('product.attribute.' ~ attribute) | trans: item.attributes[attribute] }) %}
                            {% endfor %}

                            {% include molecule('product-item-attributes') with {
                                data: {
                                    list: listOfAttributes,
                                },
                            } only %}
                        </li>

                        {% widget 'ShoppingListItemNoteWidget' args [item.shoppingListItem] only %}
                        {% elsewidget 'ShoppingListItemNoteWidgetPlugin' args [item.shoppingListItem] only %} {# @deprecated Use ShoppingListItemNoteWidget instead. #}
                        {% endwidget %}

                        {% if widgetExists('ShoppingListItemProductOptionWidgetPlugin') %}
                            {{ widget('ShoppingListItemProductOptionWidgetPlugin', item.shoppingListItem) }} {# @deprecated Use molecule('shopping-list-item-product-option-display', 'ProductOptionWidget') instead. #}
                        {% else %}
                            {% include molecule('shopping-list-item-product-option-display', 'ProductOptionWidget') with {
                                class: 'list list--expand',
                                data: {
                                    options: item.shoppingListItem.productOptions
                                }
                            } only %}
                        {% endif %}
                    </ul>
                </td>
                <td nowrap="nowrap" class="{{ config.name }}__cell text-center">
                    {% if item.price is not empty %}
                        {% include molecule('money-price') with {
                            data: {
                                amount: item.price,
                                originalAmount: item.prices.ORIGINAL is not defined or item.prices.ORIGINAL is empty ? null : item.prices.ORIGINAL
                            }
                        } only %}
                    {% else %}
                        {{ 'shopping_list.not_applicable' | trans }}
                    {% endif %}
                </td>
                <td class="{{ config.name }}__cell text-center">
                    <input class="input" {{ isItemAvailable ? '' : 'disabled' }} type="number" name="shoppingListItem[quantity][{{ item.idShoppingListItem }}]" value="{{ item.quantity }}"/>
                </td>
                <td class="{{ config.name }}__cell text-center">
                    {% if isItemAvailable %}
                        {{ 'customer.account.shopping_list.available' | trans }}
                    {% else %}
                        {% widget 'ProductDiscontinuedWidget' args [item.sku] only %}
                        {% elsewidget 'ProductDiscontinuedWidgetPlugin' args [item.sku] only %} {# @deprecated Use ProductDiscontinuedWidget instead. #}
                        {% nowidget %}
                            {{ 'customer.account.shopping_list.not_available' | trans }}
                        {% endwidget %}
                    {% endif %}
                </td>
                <td class="{{ config.name }}__cell">
                    {% if isItemAvailable %}
                        <button type="submit" name="add-item" class="button button--success" value="{{ item.idShoppingListItem }}" {{qa('submit-button')}}>
                            {{'customer.account.shopping_list.add-to-cart' | trans}}
                        </button>
                    {% endif %}
                </td>
            </tr>
            {% if can('WriteShoppingListPermissionPlugin', data.shoppingList.idShoppingList) %}
                {% widget 'ShoppingListProductAlternativeWidget' args [item, data.shoppingList] only %}
                {% elsewidget 'ProductAlternativeWidgetPlugin' args [item, data.shoppingList] only %} {# @deprecated Use ShoppingListProductAlternativeWidget instead. #}
                {% endwidget %}
            {% endif %}
        {% endfor %}
    </tbody>
{% endblock %}
