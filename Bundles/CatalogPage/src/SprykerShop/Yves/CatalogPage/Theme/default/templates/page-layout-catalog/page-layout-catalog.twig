{% extends template('page-layout-main') %}

{% define data = {
    products: required,
    facets: required,
    category: null,
    categories: [],
    categoryId: null,
    filterPath: null,
    viewMode: null,
    isEmptyCategoryFilterValueVisible: null,

    pagination: {
        currentPage: required,
        maxPage: required,
        parameters: app.request.query.all(),
        paginationPath: app.request.getPathInfo(),
        showAlwaysFirstAndLast: true
    }
} %}

{% macro renderBreadcrumbSteps(categoryNode, isLastLeaf, filterPath) %}
    {% import _self as self %}
    {% set categoryUrl = categoryNode.url | default %}
    {% set categoryUrl = filterPath is not empty ? url(filterPath, {categoryPath: categoryUrl}) : categoryUrl %}
    {% set categoryLabel = categoryNode.name | default %}
    {% set categoryPatrentNodes = categoryNode.parents | default %}

    {% if categoryPatrentNodes is not empty %}
        {{ self.renderBreadcrumbSteps(categoryPatrentNodes | first, false, filterPath) }}

        {% include molecule('breadcrumb-step') with {
            data: {
                url: categoryUrl,
                label: categoryLabel,
                withChevron: not isLastLeaf
            }
        } only %}
    {% endif %}
{% endmacro %}

{% block breadcrumbs %}
    {% import _self as self %}

    {% embed molecule('breadcrumb') with {
        embed: {
            breadcrumbs: self.renderBreadcrumbSteps(data.category, true, data.filterPath)
        }
    } only %}
        {% block breadcrumbs %}
            {{ embed.breadcrumbs }}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block content %}
    <form method="GET" class="grid" data-init-default-value-form>
        {% block form %}
            <div class="col col--sm-12 col--lg-4 col--xl-3">
                {% block filterBar %}
                    {% include molecule('view-mode-switch', 'CatalogPage') with {
                        class: 'box',
                    } only %}

                    {% include molecule('toggler-checkbox') with {
                        modifiers: ['expand'],
                        class: 'box spacing-top spacing-top--big is-hidden-lg-xl',
                        data: {
                            label: 'catalog.filter.show_hide_button' | trans,
                        },
                        attributes: {
                            'target-class-name': 'js-catalog__filters-toggle',
                            'class-to-toggle': 'is-hidden-sm-md',
                            checked: true,
                        },
                    } only %}

                    {% include organism('filter-section', 'CatalogPage') with {
                        class: 'box spacing-top spacing-top--big js-catalog__filters-toggle',
                        data: {
                            facets: data.facets,
                            filterPath: data.filterPath,
                            categories: data.categories,
                            isEmptyCategoryFilterValueVisible: data.isEmptyCategoryFilterValueVisible,
                        },
                    } only %}
                {% endblock %}
            </div>

            <div class="col col--sm-12 col--lg-8 col--xl-9">
                {% include molecule('sort', 'CatalogPage') with {
                    class: 'box'
                } only %}

                {% include organism('active-filter-section', 'CatalogPage') with {
                    class: 'spacing-top spacing-top--big',
                    data: {
                        facets: data.facets,
                    },
                } only %}

                {% include molecule('pagination') with {
                    class: 'box spacing-top spacing-top--big',
                    data: data.pagination,
                } only %}

                <div class="grid grid--stretch">
                    {% for product in data.products %}
                        {% widget 'CatalogPageProductWidget' args [product, data.viewMode] only %}
                        {% elsewidget 'ProductWidgetPlugin' args [product, data.viewMode] only %} {# @deprecated Use CatalogPageProductWidget instead. #}
                        {% endwidget %}
                    {% endfor %}
                </div>

                {% include molecule('pagination') with {
                    class: 'box',
                    data: data.pagination
                } only %}
            </div>
        {% endblock %}
    </form>
{% endblock %}
