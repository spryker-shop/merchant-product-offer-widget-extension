{% extends template('page-layout-checkout', 'CheckoutPage') %}

{% define data = {
    cart: _view.quoteTransfer,
    backUrl: _view.previousStepUrl,
    transfer: _view.quoteTransfer,
    cartItems: _view.cartItems,
    shippingAddress: _view.quoteTransfer.shippingAddress,
    billingAddress: _view.quoteTransfer.billingAddress,
    shipmentMethod: _view.quoteTransfer.shipment.method.name,
    paymentMethod: _view.quoteTransfer.payment.paymentMethod,

    forms: {
        summary: _view.summaryForm
    },

    overview: {
        shipmentMethod: _view.quoteTransfer.shipment.method.name,
        payments: _view.quoteTransfer.payments,
        expenses: _view.quoteTransfer.expenses,
        voucherDiscounts: _view.quoteTransfer.voucherDiscounts,
        cartRuleDiscounts: _view.quoteTransfer.cartRuleDiscounts,

        prices: {
            subTotal: _view.quoteTransfer.totals.subtotal,
            storeCurrency: _view.quoteTransfer.shipment.method.storeCurrencyPrice,
            grandTotal: _view.quoteTransfer.totals.grandtotal,
            priceToPay: _view.quoteTransfer.totals.priceToPay,
            tax: _view.quoteTransfer.totals.taxtotal.amount,
            discountTotal: _view.quoteTransfer.totals.discounttotal | default
        }
    },

    title: 'checkout.step.summary.title' | trans
} %}

{% block content %}
    <div class="grid">
        <div class="col col--sm-12 col--lg-4">
            <div class="box">
                <span class="float-right">{{ 'checkout.step.summary.with_method' | trans }} <strong>{{data.paymentMethod}}</strong></span>
                <h6>{{ 'checkout.step.summary.payment' | trans }}</h6>
                <hr class="box__separator">

                {% include molecule('display-address') with {
                    class: 'text-small',
                    data: {
                        address: data.billingAddress
                    }
                } only %}
            </div>

            <div class="box">
                <span class="float-right">{{ 'checkout.step.summary.with_method' | trans }} <strong>{{ data.shipmentMethod }}</strong></span>
                <h6>{{ 'checkout.step.summary.shipping' | trans }}</h6>
                <hr class="box__separator">

                {% include molecule('display-address') with {
                    class: 'text-small',
                    data: {
                        address: data.shippingAddress
                    }
                } only %}
            </div>

            {% if data.cart.idQuote is not empty %}
                <div class="box">
                    {% widget 'CommentThreadWidget' args [
                        data.cart.idQuote,
                        'quote',
                        app.request.requestUri,
                        data.cart.commentThread
                    ] only %}
                    {% endwidget %}
                </div>
            {% endif %}
        </div>

        <div class="col col--sm-12 col--lg-8">
            {% widget 'QuoteConfiguredBundleWidget' args [data.cart] with {
                data: {
                    isEditable: false,
                },
            } only %}
            {% endwidget %}

            {% set itemsExceptConfiguredBundles = data.cartItems | filter(item => item.configuredBundleItem is not defined or item.configuredBundleItem is empty) %}
            {% if itemsExceptConfiguredBundles %}
                <div class="box">
                    {% for item in itemsExceptConfiguredBundles %}
                        {% set item = item.bundleProduct is defined ? item.bundleProduct : item %}
                        {% embed molecule('summary-item', 'CheckoutPage') with {
                            data: {
                                name: item.name,
                                quantity: item.quantity,
                                price: item.sumPrice | money,
                                options: item.productOptions | default({}),
                                bundleItems: item.bundleItems | default([]),
                                quantitySalesUnit: item.quantitySalesUnit,
                                amountSalesUnit: item.amountSalesUnit,
                                amount: item.amount,
                            },
                            embed: {
                                isLast: not loop.last,
                                item: item,
                            },
                        } only %}
                            {% block body %}
                                {{parent()}}
                                {% if widgetExists('CartNoteQuoteItemNoteWidgetPlugin') %}
                                    {% if embed.item.cartNote is not empty %}
                                        {{ widget('CartNoteQuoteItemNoteWidgetPlugin', embed.item) }} {# @deprecated Use molecule('note-list', 'CartNoteWidget') instead. #}
                                    {% endif %}
                                {% elseif embed.item.cartNote is not empty %}
                                    {% include molecule('note-list', 'CartNoteWidget') ignore missing with {
                                        data: {
                                            label: 'cart_note.checkout_page.item_note',
                                            note: embed.item.cartNote,
                                        },
                                    } only %}
                                {% endif %}
                                {% if embed.isLast %}<hr class="box__separator">{% endif %}
                            {% endblock %}
                        {% endembed %}
                    {% endfor %}
                </div>
            {% endif %}

            {% if data.transfer.cartNote is not empty %}
                {% if widgetExists('CartNoteQuoteNoteWidgetPlugin') %}
                    <div class="box">
                        {{ widget('CartNoteQuoteNoteWidgetPlugin', data.transfer) }}  {#@deprecated Use molecule('note-list', 'CartNoteWidget') instead.#}
                    </div>
                {% else %}
                    <div class="box">
                        {% include molecule('note-list', 'CartNoteWidget') ignore missing with {
                            data: {
                                label: 'cart_note.checkout_page.quote_note',
                                note: data.transfer.cartNote
                            }
                        } only %}
                    </div>
                {% endif %}
            {% endif %}

            <div class="box">
                {% widget 'CartCodeFormWidget' args [data.transfer] only %}
                {% elsewidget 'CheckoutVoucherFormWidget' args [data.transfer] only %} {# @deprecated Use CartCodeFormWidget instead. #}
                {% elsewidget 'CheckoutVoucherFormWidgetPlugin' args [data.transfer] only %} {# @deprecated Use CheckoutVoucherFormWidget instead. #}
                {% endwidget %}
            </div>

            {% embed molecule('form') with {
                class: 'box',
                data: {
                    form: data.forms.summary,
                    submit: {
                        enable: can('SeeOrderPlaceSubmitPermissionPlugin'),
                        text: 'checkout.step.place.order' | trans
                    },
                    cancel: {
                        enable: true,
                        url: data.backUrl,
                        text: 'general.back.button' | trans
                    }
                },
                embed: {
                    overview: data.overview,
                    cart: data.cart
                }
            } only %}
                {% block body %}
                    {% include molecule('summary-overview', 'CheckoutPage') with {
                        data: embed.overview
                    } only %}

                    {% include molecule('gift-card-payment-summary', 'GiftCardWidget') ignore missing with {
                        data: {
                            cart: embed.cart
                        }
                    } only %}

                    <hr class="box__separator">
                    {{parent()}}
                {% endblock %}
            {% endembed %}
        </div>
    </div>
{% endblock %}
